[build-system]
requires = ["hatchling >= 1.25.0", "hatch-vcs >= 0.4.0"]
build-backend = "hatchling.build"

# -----------------------------------------------
# Package infos

[project]
name = "tao"
description = "TAO application client API/CLI"
authors = [
    { name = "CS Group" },
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10"
keywords = ["python", "api", "cli", "tao", "dunia", "cs-group"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Environment :: Console",
    "Framework :: Hatch",
    "Framework :: MkDocs",
    "Framework :: Pytest",
    "Framework :: tox",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Version Control :: Git",
    "Typing :: Typed",
]
dependencies = [
    "click~=8.1",
    "pydantic~=2.9",
    "PyYAML~=6.0",
    "requests~=2.32",
    "rich~=13.9",
    "typing-extensions~=4.12"
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/tao-org/tao-publisher"
"Source" = "https://github.com/tao-org/tao-publisher"
"Bug Tracker" = "https://github.com/tao-org/tao-publisher/issues"

[project.scripts]
tao = "tao._cli:main"

# -----------------------------------------------
# Build & Packaging

[tool.hatch.build]
skip-excluded-dirs = true

[tool.hatch.version]
source = "vcs"
fallback-version = "0.0.0"

[tool.hatch.version.raw-options]
version_scheme = "python-simplified-semver"

[tool.commitizen]
version_provider = "scm"
tag_format = "v$version"
annotated_tag = true
changelog_incremental = true
change_type_order = ["Features", "Bug fixes", "Perf", "Internal"]

[tool.commitizen.change_type_map]
feat = "Features"
fix = "Bug fixes"
refactor = "Internal"
perf = "Perf"

# -----------------------------------------------
# Tests

[tool.pytest.ini_options]
minversion = "8.0"
required_plugins = [
    "pytest-cov",
    "pytest-html",
]
testpaths = [
    "src",
    "tests",
]
addopts = [
    "--doctest-modules",
    # pytest-cov
    "--cov=src",
    "--cov-config=pyproject.toml",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    # pytest-html
    "--html=tests-reports/index.html",
    "--self-contained-html",
]

[tool.coverage.run]
branch = true
parallel = true
omit = [
    "*/__main__.py",
    "tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __str__",
    "def __repr__",
    "if self.debug",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.coverage.html]
directory = "tests-reports/coverage"

[tool.coverage.xml]
output = "tests-reports/coverage.xml"

# -----------------------------------------------
# Linters

[tool.mypy]
strict = true
show_error_context = true
show_column_numbers = true
pretty = true
exclude = ["tests"]

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 72

[tool.ruff.lint]
select = [
    "F", # PyFlakes
    "E", "W", # pycodestyle
    "C90", # mccabe
    "I", # isort
    "N", # pep8-naming
    "D", # pydocstyle
    "UP", # pyupgrade
    "ERA", # eradicate
    "PGH", # pygrep-hooks
    "PL", # Pylint
    "TRY", # tryceratops
    "FLY", # flint
    "PERF", # Perflint
    "RUF", # Ruff
    # flake8-* plugins
    "A", "ANN", "ARG", "ASYNC", "B", "BLE", "C4", "COM", "DTZ", "EM", "EXE", "FIX",
    "G", "INP", "ISC", "LOG", "PIE", "PT", "PTH", "PYI", "Q", "RET", "RSE", "S",
    "SIM", "SLF", "SLOT", "T20", "TCH", "TD", "TID", "YTT",
]
ignore = [
    "ANN101", "ANN102", "D105", "D107", "D203", "D213", "D417", "G004", "RET504",
    # Formatter compatibility (https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules)
    "W191", "E111", "E114", "E117", "D206", "D300", "Q000", "Q001", "Q002", "Q003",
    "COM812", "COM819", "ISC001", "ISC002",
]

[tool.ruff.lint.extend-per-file-ignores]
"_cli.py" = ["PLR0913", "TRY400"]
"tests/**/*.py" = ["INP001", "ANN201", "S101"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.lint.pydocstyle]
convention = "google"
